name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. .env 파일 생성
      - name: Create .env file
        run: |
          echo "KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }}" > .env
          echo "KAKAO_SECRET=${{ secrets.KAKAO_SECRET }}" >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env

      # 3. Docker 이미지 빌드
      - name: Build Docker Image
        run: |
          docker build -t backend_server ./backend

      # 4. 서버에 코드 전송
      - name: Deploy to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "./backend/*"      # 중첩되지 않게 수정
          target: "/home/ubuntu"

      # 5. 서버에서 Docker Compose 실행
      - name: SSH into EC2 and restart Docker Compose
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/backend
            echo "KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }}" > .env
            echo "KAKAO_SECRET=${{ secrets.KAKAO_SECRET }}" >> .env
            echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
            echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
            docker-compose down
            docker-compose up -d --build
